ggplot(farmaco_2, aes(x = factor(Year), y = valor)) +
geom_boxplot() +
labs(title = "Boxplot de DHD por Año en farmaco_2",
x = "Año",
y = "DHD") +
theme_minimal()
# Crear el boxplot
ggplot(farmaco_2, aes(x = factor(clase), y = valor)) +
geom_boxplot() +
labs(title = "Boxplot de DHD por Año en farmaco_2",
x = "Año",
y = "DHD") +
theme_minimal()
# Crear el boxplot
ggplot(farmaco_2, aes(x = factor(clase), y = valor)) +
geom_boxplot() +
scale_y_log10() +
labs(title = "Boxplot de DHD por Año en farmaco_2",
x = "Año",
y = "DHD") +
theme_minimal()
# Crear el boxplot
ggplot(farmaco_2, aes(x = factor(clase), y = valor)) +
geom_boxplot() +
scale_y_log10() +
labs(title = "Boxplot de DHD por Año en farmaco_2",
x = "Clase de farmaco",
y = "DHD") +
theme_minimal()+
annotate("text", x = 1.5, y = 10, label = "ATC: Antidepresivo tricíclico
IRND:Inhibidor de la recaptación de noradrenalina y dopamina
IRSN: Inhibidor de la recaptación de serotonina y noradrenalina", size = 5, color = "blue") # Ajusta x e y según sea necesario
# Crear el boxplot
ggplot(farmaco_2, aes(x = factor(clase), y = valor)) +
geom_boxplot() +
scale_y_log10() +
labs(title = "Boxplot de DHD por Año en farmaco_2",
x = "Clase de farmaco",
y = "DHD") +
theme_minimal()+
annotate("text", x = 3, y = 10, label = "ATC: Antidepresivo tricíclico
IRND:Inhibidor de la recaptación de noradrenalina y dopamina
IRSN: Inhibidor de la recaptación de serotonina y noradrenalina", size = 5, color = "blue") # Ajusta x e y según sea necesario
# Crear el boxplot
ggplot(farmaco_2, aes(x = factor(clase), y = valor)) +
geom_boxplot() +
scale_y_log10() +
labs(title = "Boxplot de DHD por Año en farmaco_2",
x = "Clase de farmaco",
y = "DHD") +
theme_minimal()+
annotate("text", x = 2, y = 10, label = "ATC: Antidepresivo tricíclico
IRND:Inhibidor de la recaptación de noradrenalina y dopamina
IRSN: Inhibidor de la recaptación de serotonina y noradrenalina", size = 5, color = "blue") # Ajusta x e y según sea necesario
# Importar las hojas
farmaco <- read_excel(file_path, sheet = "farmaco")
farmaco_2 <- read_excel(file_path, sheet = "farmaco_2")
# Mostrar las primeras filas de cada hoja
head(farmaco)
head(farmaco_2)
str(farmaco)
str(farmaco_2)
# Convertir columnas de caracteres a numéricas en farmaco
farmaco <- farmaco %>%
mutate(across(-DHD, as.numeric))
# Transformar los datos para el boxplot
farmaco_long <- farmaco %>%
pivot_longer(cols = -DHD, names_to = "Medicamento", values_to = "DHD_Valor")
# Crear el boxplot
ggplot(farmaco_long, aes(x = Medicamento, y = DHD_Valor)) +
geom_boxplot() +
labs(title = "Boxplot de DHD por Medicamento",
x = "Medicamento",
y = "DHD") +
theme_minimal()
farmaco_2 <- farmaco_2 %>%
mutate(valor = as.numeric(valor))
# Crear el boxplot
ggplot(farmaco_2, aes(x = factor(clase), y = valor)) +
geom_boxplot() +
scale_y_log10() +
labs(title = "Boxplot de DHD por Año en farmaco_2",
x = "Clase de farmaco",
y = "DHD") +
theme_minimal()+
annotate("text", x = 2, y = 10, label = "ATC: Antidepresivo tricíclico
IRND:Inhibidor de la recaptación de noradrenalina y dopamina
IRSN: Inhibidor de la recaptación de serotonina y noradrenalina", size = 5, color = "blue") # Ajusta x e y según sea necesario
# Crear el boxplot
ggplot(farmaco_2, aes(x = factor(clase), y = valor)) +
geom_boxplot() +
scale_y_log10() +
labs(title = "Boxplot de DHD por Año en farmaco_2",
x = "Clase de farmaco",
y = "DHD") +
theme_minimal()+
annotate("text", x = 3, y = 10, label = "ATC: Antidepresivo tricíclico
IRND:Inhibidor de la recaptación de noradrenalina y dopamina
IRSN: Inhibidor de la recaptación de serotonina y noradrenalina", size = 5, color = "blue") # Ajusta x e y según sea necesario
farmaco_2 <- farmaco_2 %>%
mutate(valor = as.numeric(valor))
# Crear el boxplot
ggplot(farmaco_2, aes(x = factor(clase), y = valor)) +
geom_boxplot() +
scale_y_log10() +
labs(title = "Boxplot de DHD por Año en farmaco_2",
x = "Clase de farmaco",
y = "DHD") +
theme_minimal()+
annotate("text", x = 2.5, y = 10, label = "ATC: Antidepresivo tricíclico
IRND:Inhibidor de la recaptación de noradrenalina y dopamina
IRSN: Inhibidor de la recaptación de serotonina y noradrenalina", size = 5, color = "blue") # Ajusta x e y según sea necesario
str(farmaco_2)
library(rstatix)
resultado_kruskal <- farmaco_2 %>%
kruskal_test(valor ~ clase)
print(resultado_kruskal)
library(FSA)
install.packages("FSA")
library(FSA)
# Realizar el test de Dunn con corrección Bonferroni
dunn_result <- dunnTest(valor ~ clase, data = farmaco_2, method = "bonferroni")
print(dunn_result)
model_cc2 <- lm(REFL ~ SPEC, data = cc_2)
summary(model_cc2)
# Breusch-Pagan Test for homocedasticity
bptest(model_cc2)
# Shapiro-Wilk test
shapiro.test(residuals(model_cc2))
model_cc2 <- lm(REFL ~ SPEC, data = cc_2)
summary(model_cc2)
# Breusch-Pagan Test for homocedasticity
bptest(model_cc2)
# Shapiro-Wilk test
shapiro.test(residuals(model_cc2))
# Linear regression model
model_cc2 <- lm(SPEC~ REFL , data = cc_2)
summary(model_cc2)
# Breusch-Pagan Test for homocedasticity
bptest(model_cc2)
# Shapiro-Wilk test
shapiro.test(residuals(model_cc2))
# Q-Q plot using ggplot2
residuals <- data.frame(residuals = residuals(model_log_cc2))
qq_plot <- ggplot(residuals, aes(sample = residuals)) +
geom_qq() +
geom_qq_line(color = "red") +
labs( x = "Theoretical Quantiles",
y = "Residual Quantiles") +
theme_minimal() +
theme(
text = element_text(size = 12),
axis.text = element_text(size = 18, margin = margin(t = 15)),
axis.title = element_text(size = 18, margin = margin(t = 15)),
plot.title = element_text(size = 12, margin = margin(t = 15))
)
qq_plot
#######################################################################
# ASSESSMENT OF SOLUTIONS WITH KNOWN CONCENTRATIONS
#######################################################################
# Figure of linear regression (raw data)
# Soluble reactive phosphorus (micrograms of P per liter)
FIG_model_cc2 <- ggplot(cc_2, aes(x = REFL, y = SPEC)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(x = "Spectrophotometer UV-Vis",
y = "Reflectoquant") +
theme_minimal() +
theme(
text = element_text(size = 12),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18, margin = margin(t = 10, r = 10, b = 10, l = 10)),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(margin = margin(r = 15)),
legend.text = element_text(size = 12),
legend.title = element_text(size = 18)
)
FIG_model_cc2
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/FIG_model_cc2.jpg", plot = FIG_model_cc2, dpi = 300, bg = "white")
#######################################################################
# ASSESSMENT OF SOLUTIONS WITH KNOWN CONCENTRATIONS
#######################################################################
# Figure of linear regression (raw data)
# Soluble reactive phosphorus (micrograms of P per liter)
FIG_model_cc2 <- ggplot(cc_2, aes(x = REFL, y = SPEC)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(x = "Reflectoquant",
y = "Spectrophotometer UV-Vis") +
theme_minimal() +
theme(
text = element_text(size = 12),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18, margin = margin(t = 10, r = 10, b = 10, l = 10)),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(margin = margin(r = 15)),
legend.text = element_text(size = 12),
legend.title = element_text(size = 18)
)
FIG_model_cc2
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/FIG_model_cc2.jpg", plot = FIG_model_cc2, dpi = 300, bg = "white")
# Linear regression model
model_cc2 <- lm(SPEC~ REFL , data = cc_2)
# Linear regression model
model_cc2 <- lm(SPEC~ REFL , data = cc_2)
summary(model_cc2)
# Breusch-Pagan Test for homocedasticity
bptest(model_cc2)
# Shapiro-Wilk test
shapiro.test(residuals(model_cc2))
# Q-Q plot using ggplot2
residuals <- data.frame(residuals = residuals(model_log_cc2))
qq_plot <- ggplot(residuals, aes(sample = residuals)) +
geom_qq() +
geom_qq_line(color = "red") +
labs( x = "Theoretical Quantiles",
y = "Residual Quantiles") +
theme_minimal() +
theme(
text = element_text(size = 12),
axis.text = element_text(size = 18, margin = margin(t = 15)),
axis.title = element_text(size = 18, margin = margin(t = 15)),
plot.title = element_text(size = 12, margin = margin(t = 15))
)
qq_plot
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/FIG_QQ.jpg", plot = qq_plot, dpi = 300, bg = "white")
# Linear regression model
model_cc2 <- lm(SPEC~ REFL , data = cc_2)
summary(model_cc2)
# Breusch-Pagan Test for homocedasticity
bptest(model_cc2)
# Shapiro-Wilk test
shapiro.test(residuals(model_cc2))
# Calculando los cuantiles de REFL
quantiles_REFL <- quantile(cc_2$REFL, probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE)
print(quantiles_REFL)
FIG_model_rivers <- ggplot(rivers, aes(x = REFL_f, y = SPEC_f)) +
geom_point(shape = 4, size = 3) +
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE, level = 0.95) +
labs(x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
theme(
text = element_text(size = 12),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18, margin = margin(t = 10, r = 10, b = 10, l = 10)),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(margin = margin(r = 15)),
legend.text = element_text(size = 12),
legend.title = element_text(size = 18)
) +
scale_x_continuous(limits = c(0, 2300)) +
scale_y_continuous(limits = c(0, 2300)) +
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +
geom_hline(yintercept = 25, linetype = "dotted", color = "red")
FIG_model_rivers
FIG_model_rivers <- ggplot(rivers, aes(x = REFL_f, y = SPEC_f)) +
geom_point(shape = 4, size = 3) +
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE, level = 0.95) +
labs(x = "Reflectoquant",
y = "Spectrophotometer") +
theme_minimal() +
theme(
text = element_text(size = 12),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18, margin = margin(t = 10, r = 10, b = 10, l = 10)),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(margin = margin(r = 15)),
legend.text = element_text(size = 12),
legend.title = element_text(size = 18)
) +
scale_x_continuous(limits = c(0, 2300)) +
scale_y_continuous(limits = c(0, 2300)) +
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +
geom_hline(yintercept = 25, linetype = "dotted", color = "red")
FIG_model_rivers
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/FIG_model_rivers.jpg", plot = FIG_model_rivers, dpi = 300, bg = "white")
# Linear regression model
model_rivers <- lm( SPEC_f~ REFL_f, data = rivers)
# Linear regression model
model_rivers <- lm( SPEC_f~ REFL_f, data = rivers)
summary(model_rivers)
# Breusch-Pagan Test for homocedasticity
bptest(model_rivers )
# Shapiro-Wilk test
shapiro.test(residuals(model_rivers ))
# Q-Q plot
residuals2 <- data.frame(residuals = residuals(model_log_cc2))
qq_plot2 <- ggplot(residuals2, aes(sample = residuals)) +
geom_qq() +
geom_qq_line(color = "red") +
labs( x = "Theoretical Quantiles",
y = "Residual Quantiles") +
theme_minimal() +
theme(
text = element_text(size = 12),
axis.text = element_text(size = 18, margin = margin(t = 15)),
axis.title = element_text(size = 18, margin = margin(t = 15)),
plot.title = element_text(size = 12, margin = margin(t = 15))
)
qq_plot2
# Q-Q plot
residuals2 <- data.frame(residuals = residuals(model_rivers))
qq_plot2 <- ggplot(residuals2, aes(sample = residuals)) +
geom_qq() +
geom_qq_line(color = "red") +
labs( x = "Theoretical Quantiles",
y = "Residual Quantiles") +
theme_minimal() +
theme(
text = element_text(size = 12),
axis.text = element_text(size = 18, margin = margin(t = 15)),
axis.title = element_text(size = 18, margin = margin(t = 15)),
plot.title = element_text(size = 12, margin = margin(t = 15))
)
qq_plot2
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/FIG_QQ2.jpg", plot = qq_plot2, dpi = 300, bg = "white")
# quantiles of REFL
quantiles_REFL <- quantile(rivers$REFL_2, probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE)
# quantiles of REFL
quantiles_REFL <- quantile(cc_2$REFL, probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE)
print(quantiles_REFL)
# quantiles of REFL
quantiles_REFL_f <- quantile(rivers$REFL_2, probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE)
print(quantiles_REFL_f)
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/FIG_QQ2.jpg", plot = qq_plot2, dpi = 300, bg = "white")
# quantiles of REFL_f
quantiles_REFL_f <- quantile(rivers$REFL_f, probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE)
print(quantiles_REFL_f)
cc_2_filtered <- cc_2[cc_2$REFL > 32.6, ]
model_cc2_filtered <- lm(SPEC ~ REFL, data = cc_2_filtered)
summary(model_cc2_filtered)
bptest(model_cc2_filtered)
shapiro.test(residuals(model_cc2_filtered))
cc_2_filtered <- cc_2[cc_2$REFL > 32.6, ]
model_cc2_filtered <- lm(SPEC ~ REFL, data = cc_2_filtered)
summary(model_cc2_filtered)
bptest(model_cc2_filtered)
shapiro.test(residuals(model_cc2_filtered))
FIG_model_rivers <- ggplot(rivers, aes(x = REFL_f, y = SPEC_f)) +
geom_point(shape = 4, size = 3) +
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE, level = 0.95) +
labs(x = "Reflectoquant",
y = "Spectrophotometer") +
theme_minimal() +
theme(
text = element_text(size = 12),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18, margin = margin(t = 10, r = 10, b = 10, l = 10)),
axis.title.x = element_text(margin = margin(t = 15)),
axis.title.y = element_text(margin = margin(r = 15)),
legend.text = element_text(size = 12),
legend.title = element_text(size = 18)
) +
scale_x_continuous(limits = c(0, 2300)) +
scale_y_continuous(limits = c(0, 2300)) +
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +
geom_hline(yintercept = 25, linetype = "dotted", color = "red")
FIG_model_rivers
model_rivers <- lm( SPEC_f~ REFL_f, data = rivers)
summary(model_rivers)
bptest(model_rivers )
shapiro.test(residuals(model_rivers ))
# Linear regression model
model_cc2 <- lm(SPEC~ REFL , data = cc_2)
summary(model_cc2)
# Breusch-Pagan Test for homocedasticity
bptest(model_cc2)
# Shapiro-Wilk test
shapiro.test(residuals(model_cc2))
model_rivers <- lm( SPEC_f~ REFL_f, data = rivers)
summary(model_rivers)
bptest(model_rivers )
shapiro.test(residuals(model_rivers ))
# means of SPEC and REFL
cc$SPEC_mean <- rowMeans(cbind(cc$SPEC_1, cc$SPEC_2, cc$SPEC_3))
cc$REFL_mean <- rowMeans(cbind(cc$REFL_1, cc$REFL_2, cc$REFL_3))
# mean and difference between two methods
cc$mean<- rowMeans(cbind(cc$SPEC_mean, cc$REFL_mean))
cc$difference <- cc$SPEC_mean - cc$REFL_mean
# difference mean
difference_mean<- mean(cc$difference, na.rm = TRUE)
print(difference_mean)
head(cc)
str(cc)
# Bland-Altman (with BlandAltmanLeh)
fig_bland.altman.plot<-bland.altman.plot(cc$SPEC_mean, cc$REFL_mean, graph.sys = "ggplot2")
fig_bland.altman.plot <- fig_bland.altman.plot + xlab("Differences") + ylab("Mean of measurements")
fig_bland.altman.plot <- fig_bland.altman.plot + theme(
text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
plot.title = element_text(size = 12, face = "bold")
)
fig_bland.altman.plot
fig_bland.altman.plot <- fig_bland.altman.plot + theme(
text = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 12, face = "bold")
)
fig_bland.altman.plot
fig_bland.altman.plot <- fig_bland.altman.plot + theme(
text = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 12, face = "bold")
)
fig_bland.altman.plot
fig_bland.altman.plot <- fig_bland.altman.plot + theme(
text = element_text(size = 16),
axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
plot.title = element_text(size = 12, face = "bold")
)
fig_bland.altman.plot
fig_bland.altman.plot <- fig_bland.altman.plot + theme(
text = element_text(size = 16),
axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold")
)
fig_bland.altman.plot
fig_bland.altman.plot <- fig_bland.altman.plot + theme(
text = element_text(size = 16),
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
plot.title = element_text(size = 14, face = "bold")
)
fig_bland.altman.plot
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/fig_bland.altman.plot.jpg", plot = fig_bland.altman.plot, dpi = 300, bg="white")
names(cc_2)
str(cc_2)
cc_2
View(model_rivers)
View(rivers)
###################
# means of SPEC and REFL
rivers$SPEC_mean <- rowMeans(cbind(rivers$SPEC_f))
rivers$REFL_mean <- rowMeans(cbind(rivers$REFL_f))
# mean and difference between two methods
rivers$mean<- rowMeans(cbind(rivers$SPEC_mean, rivers$REFL_mean))
rivers$difference <- rivers$SPEC_mean - rivers$REFL_mean
# difference mean_rivers
difference_mean_riv<- mean(rivers$difference, na.rm = TRUE)
print(difference_mean_riv)
head(rivers)
str(rivers)
# Bland-Altman (with BlandAltmanLeh)
fig_bland.altman.plot<-bland.altman.plot(rivers$SPEC_mean, rivers$REFL_mean, graph.sys = "ggplot2")
fig_bland.altman.plot <- fig_bland.altman.plot + xlab("Differences") + ylab("Mean of measurements")
fig_bland.altman.plot <- fig_bland.altman.plot + theme(
text = element_text(size = 16),
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
plot.title = element_text(size = 14, face = "bold")
)
fig_bland.altman.plot_riv
# Bland-Altman (with BlandAltmanLeh)
fig_bland.altman.plot_riv<-bland.altman.plot(rivers$SPEC_mean, rivers$REFL_mean, graph.sys = "ggplot2")
fig_bland.altman.plot_riv <- fig_bland.altman.plot_riv + xlab("Differences") + ylab("Mean of measurements")
fig_bland.altman.plot_riv <- fig_bland.altman.plot_riv + theme(
text = element_text(size = 16),
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
plot.title = element_text(size = 14, face = "bold")
)
fig_bland.altman.plot_riv
# Bland-Altman (with BlandAltmanLeh)
fig_bland.altman.plot<-bland.altman.plot(cc_2$SPEC_mean, cc_2$REFL_mean, graph.sys = "ggplot2")
fig_bland.altman.plot <- fig_bland.altman.plot + xlab("Differences") + ylab("Mean of measurements")
fig_bland.altman.plot <- fig_bland.altman.plot + theme(
text = element_text(size = 16),
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
plot.title = element_text(size = 14, face = "bold")
)
fig_bland.altman.plot_riv
# Bland-Altman (with BlandAltmanLeh)
fig_bland.altman.plot<-bland.altman.plot(cc$SPEC_mean, cc$REFL_mean, graph.sys = "ggplot2")
fig_bland.altman.plot <- fig_bland.altman.plot + xlab("Differences") + ylab("Mean of measurements")
fig_bland.altman.plot <- fig_bland.altman.plot + theme(
text = element_text(size = 16),
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
plot.title = element_text(size = 14, face = "bold")
)
fig_bland.altman.plot
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/fig_bland.altman.plot.jpg", plot = fig_bland.altman.plot, dpi = 300, bg="white")
################### Rivers
# means of SPEC and REFL
rivers$SPEC_mean <- rowMeans(cbind(rivers$SPEC_f))
rivers$REFL_mean <- rowMeans(cbind(rivers$REFL_f))
# mean and difference between two methods
rivers$mean<- rowMeans(cbind(rivers$SPEC_mean, rivers$REFL_mean))
rivers$difference <- rivers$SPEC_mean - rivers$REFL_mean
# difference mean_rivers
difference_mean_riv<- mean(rivers$difference, na.rm = TRUE)
print(difference_mean_riv)
head(rivers)
str(rivers)
# Bland-Altman (with BlandAltmanLeh)
fig_bland.altman.plot_riv<-bland.altman.plot(rivers$SPEC_mean, rivers$REFL_mean, graph.sys = "ggplot2")
fig_bland.altman.plot_riv <- fig_bland.altman.plot_riv + xlab("Differences") + ylab("Mean of measurements")
fig_bland.altman.plot_riv <- fig_bland.altman.plot_riv + theme(
text = element_text(size = 16),
axis.title = element_text(size = 16),
axis.text = element_text(size = 16),
plot.title = element_text(size = 14, face = "bold")
)
fig_bland.altman.plot_riv
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/fig_bland.altman.plot_riv.jpg", plot = fig_bland.altman.plot_riv, dpi = 300, bg="white")
