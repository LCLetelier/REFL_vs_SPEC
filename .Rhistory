str(rivers)
# Ajustar el modelo de regresión lineal
model_cc <- lm(REFL ~ SPEC, data = cc)
# Ajustar el modelo de regresión lineal
model_cc2 <- lm(REFL ~ SPEC, data = cc2)
str(cc_2)
# Ajustar el modelo de regresión lineal
model_cc2 <- lm(REFL ~ SPEC, data = cc_2)
# Resumen del modelo
summary(model_cc2)
model_rivers <- lm(REFL_f ~ SPEC_f, data = rivers)
summary(model_rivers)
# Linear regression of assessment of solutions with known concentrations
FIG_model_cc2<-ggplot(metodos, aes(x = SPEC, y = REFL)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "SPEC",
y = "REFL") +
theme_minimal()
# Linear regression of assessment of solutions with known concentrations
FIG_model_cc2<-ggplot(cc_2, aes(x = SPEC, y = REFL)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "SPEC",
y = "REFL") +
theme_minimal()
FIG_model_cc2
# Linear regression of assessment of solutions with known concentrations
FIG_model_cc2<-ggplot(cc_2, aes(x = SPEC, y = REFL)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal()
FIG_model_cc2
# Linear regression of assessment of solutions with known concentrations
FIG_model_cc2<-ggplot(cc_2, aes(x = SPEC, y = REFL)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer UV-Vis",
y = "Reflectoquant") +
theme_minimal()
FIG_model_rivers <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Cambiar el shape a 4 para que sean cruces
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Establecer límites del eje X
scale_y_continuous(limits = c(0, 2500)) +  # Establecer límites del eje Y
theme(plot.title = element_text(hjust = 0.5)) # Centrar el título
FIG_model_rivers
FIG_model_rivers <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 3, size = 3) +  # Cambiar el shape a 4 para que sean cruces
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Establecer límites del eje X
scale_y_continuous(limits = c(0, 2500)) +  # Establecer límites del eje Y
theme(plot.title = element_text(hjust = 0.5)) # Centrar el título
FIG_model_rivers
FIG_model_rivers <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue") +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 2500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers
FIG_model_rivers_log <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue") +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 2500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers_log
FIG_model_rivers_log <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue") +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 2500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers_log
FIG_model_rivers
FIG_model_rivers <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue") +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 2500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers
FIG_model_cc2
FIG_model_rivers <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue") +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 2500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers
FIG_model_rivers <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", aes(fill = "lightblue")) +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 2500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers
FIG_model_rivers <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE) +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 2500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers
FIG_model_rivers_log <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE) +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 2500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers_log
FIG_model_rivers_log <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE) +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 2500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers_log
FIG_model_rivers_log <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE) +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 2500)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 2500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers_log
FIG_model_rivers_log <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE) +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_log10(limits = c(0, 2500)) +  # Set X axis limits
scale_y_log10(limits = c(0, 2500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers_log
FIG_model_rivers_log <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE) +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_log10(limits = c(1, 2500)) +  # Set X axis to log scale
scale_y_log10(limits = c(1, 2500)) +  # Set Y axis to log scale
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers_log
FIG_model_rivers
FIG_model_rivers <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE) +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 500)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 500)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers
FIG_model_rivers <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE) +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 50)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 50)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers
FIG_model_rivers <- ggplot(rivers, aes(x = SPEC_f, y = REFL_f)) +
geom_point(shape = 4, size = 3) +  # Change shape to 4 for crosses
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", show.legend = FALSE) +  # Confidence interval in light blue
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer",
y = "Reflectoquant") +
theme_minimal() +
scale_x_continuous(limits = c(0, 100)) +  # Set X axis limits
scale_y_continuous(limits = c(0, 100)) +  # Set Y axis limits
geom_vline(xintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at X = 25
geom_hline(yintercept = 25, linetype = "dotted", color = "red") +  # Red dotted line at Y = 25
theme(plot.title = element_text(hjust = 0.5))  # Center the title
FIG_model_rivers
str(rivers)
library(tidyr)
# Convert data to long format for ggplot2
rivers_long <- rivers %>%
pivot_longer(cols = c(SPEC_f, REFL_f), names_to = "variable", values_to = "value")
# Histogram
ggplot(rivers_long, aes(x = value, fill = variable)) +
geom_histogram(alpha = 0.5, position = "identity", bins = 30) +
labs(title = "Histogram of SPEC_f and REFL_f",
x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"))
# Histograms
# Create the histogram
ggplot(rivers_long, aes(x = value, fill = variable)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +  # Use position = "dodge" for side-by-side bars
labs(title = "Histogram of SPEC_f and REFL_f",
x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red")) +
scale_x_log10()  # Set X axis to log scale
# Histograms
# Create the histogram
ggplot(rivers_long, aes(x = value, fill = variable)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +  # Use position = "dodge" for side-by-side bars
labs(title = "Histogram of SPEC_f and REFL_f",
x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red")) +
scale_x_log10() +  # Set X axis to log scale
theme(legend.position = "top")  # Position the legend in the top right corner
# Histograms
# Create the histogram
ggplot(rivers_long, aes(x = value, fill = variable)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +  # Use position = "dodge" for side-by-side bars
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red")) +
scale_x_log10() +  # Set X axis to log scale
theme(legend.position = "top")  # Position the legend in the top right corner
# Histograms
# Create the histogram
ggplot(rivers_long, aes(x = value, fill = variable)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +  # Use position = "dodge" for side-by-side bars
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red")) +
scale_x_log10() +  # Set X axis to log scale
theme(legend.position = c(0.9, 0.9))  # Position the legend in the top right corner
# Histograms
# Create the histogram
ggplot(rivers_long, aes(x = value, fill = variable)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +  # Use position = "dodge" for side-by-side bars
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("Spectrophotometer" = "blue", "Reflectoquant" = "red")) +
scale_x_log10() +  # Set X axis to log scale
theme(legend.position = c(0.9, 0.9))  # Position the legend in the top right corner
# Histograms
# Create the histogram
ggplot(rivers_long, aes(x = value, fill = variable)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +  # Use position = "dodge" for side-by-side bars
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red")) +
scale_x_log10() +
theme(legend.position = c(0.9, 0.9))
# Histograms
ggplot(rivers_long, aes(x = value, fill = variable)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red")) +
scale_x_log10() +
theme(legend.position = c(0.9, 0.9))
# Conversion data to long format
rivers_long <- rivers %>%
pivot_longer(cols = c(SPEC_f, REFL_f), names_to = "Methods", values_to = "value")
# Conversion data to long format
rivers_long <- rivers %>%
pivot_longer(cols = c(SPEC_f, REFL_f), names_to = "Methods", values_to = "value")
# Histograms
ggplot(rivers_long, aes(x = value, fill = variable)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red")) +
scale_x_log10() +
theme(legend.position = c(0.9, 0.9))
# Conversion data to long format
rivers_long <- rivers %>%
pivot_longer(cols = c(SPEC_f, REFL_f), names_to = "Methods", values_to = "value")
# Histograms
ggplot(rivers_long, aes(x = value, fill = variable)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red")) +
scale_x_log10() +
theme(legend.position = c(0.9, 0.9))
# Histograms
ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red")) +
scale_x_log10() +
theme(legend.position = c(0.9, 0.9))
# Histograms
ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"),
labels = c("SPEC_f" = "Spectrophotometer", "REFL_f" = "Reflectoquant"))
# Histograms
ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"),
labels = c("SPEC_f" = "Spectrophotometer", "REFL_f" = "Reflectoquant"))+
scale_x_log10() +
theme(legend.position = c(0.9, 0.9))
# Histograms
ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"),
labels = c("SPEC_f" = "Spectrophotometer", "REFL_f" = "Reflectoquant"))+
scale_x_log10() +
theme(legend.position = c(1, 1))
# Histograms
ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"),
labels = c("SPEC_f" = "Spectrophotometer", "REFL_f" = "Reflectoquant"))+
scale_x_log10() +
theme(legend.position = c(0.5, 0.5))
# Histograms
ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"),
labels = c("SPEC_f" = "Spectrophotometer", "REFL_f" = "Reflectoquant"))+
scale_x_log10() +
theme(legend.position = c(0.7, 0.7))
# Histograms
ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"),
labels = c("SPEC_f" = "Spectrophotometer", "REFL_f" = "Reflectoquant"))+
scale_x_log10() +
theme(legend.position = c(0.7, 0.8))
# Histograms
ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"),
labels = c("SPEC_f" = "Spectrophotometer", "REFL_f" = "Reflectoquant"))+
scale_x_log10() +
theme(legend.position = c(0.7, 0.9))
# Histograms
ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"),
labels = c("SPEC_f" = "Spectrophotometer", "REFL_f" = "Reflectoquant"))+
scale_x_log10() +
theme(legend.position = c(0.9, 0.9))
# Histograms
ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"),
labels = c("SPEC_f" = "Spectrophotometer", "REFL_f" = "Reflectoquant"))+
scale_x_log10() +
theme(legend.position = c(0.85, 0.9))
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/FIG_model_cc2.png", plot = FIG_model_cc2, dpi = 300)
# Linear regression of assessment of solutions with known concentrations
FIG_model_cc2<-ggplot(cc_2, aes(x = SPEC, y = REFL)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Soluble reactive phosphorus (micrograms of P per liter)",
x = "Spectrophotometer UV-Vis",
y = "Reflectoquant") +
theme_minimal()
FIG_model_cc2
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/FIG_model_cc2.png", plot = FIG_model_cc2, dpi = 300)
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/FIG_model_cc2.jpg", plot = FIG_model_cc2, dpi = 300)
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/FIG_model_cc2.jpg", plot = FIG_model_cc2, dpi = 300, bg = "white")
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/histogram.jpg", plot = histogram, dpi = 300, bg = "white")
histogram
# Histograms
histogram<-ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"),
labels = c("SPEC_f" = "Spectrophotometer", "REFL_f" = "Reflectoquant"))+
scale_x_log10() +
theme(legend.position = c(0.85, 0.9))
histogram
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/histogram.jpg", plot = histogram, dpi = 300, bg = "white")
# Histograms
histogram<-ggplot(rivers_long, aes(x = value, fill = Methods)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs( x = "Value",
y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = c("SPEC_f" = "blue", "REFL_f" = "red"),
labels = c("SPEC_f" = "Spectrophotometer", "REFL_f" = "Reflectoquant"))+
scale_x_log10() +
theme(legend.position = c(0.80, 0.9))
histogram
ggsave("~/Dropbox/manus/Concordancia_Met_Pdis/Figures/histogram.jpg", plot = histogram, dpi = 300, bg = "white")
